---
apiVersion: v1
kind: Service
metadata:
  namespace: playground
  name: postgres-headless-svc
  labels:
    app: postgres
spec:
  type: ClusterIP
  clusterIP: None
  selector:
    app: postgres
  ports:
    - name: postgres
      port: 5432
      targetPort: 5432
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres-sts
spec:
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: postgres
  serviceName: postgres-headless-svc
  replicas: 1
  template:
    metadata:
      labels:
        app: postgres
    spec:
      volumes:
        - name: postgres-configmap-volume
          configMap:
            name: postgres-configmap
      terminationGracePeriodSeconds: 10
      containers:
        - name: postgres
          image: postgres:10.5
          args: ['-c', 'config_file=/etc/postgres.conf', '-c', 'hba_file=/etc/pg_hba.conf']
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5432
              protocol: TCP
          env:
            - name: POSTGRES_USER
              value: postgres
            - name: PGUSER
              value: postgres
            - name: POSTGRES_DB
              value: postgres
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: password
            - name: REPLICATION_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: replicaPassword
            - name: POD_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - exec pg_isready --host $POD_IP
            failureThreshold: 6
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          readinessProbe:
            exec:
              command:
                - sh
                - -c
                - exec pg_isready --host $POD_IP
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 3
          volumeMounts:
            - name: postgres-data-volume
              mountPath: /var/lib/postgresql/data/pgdata
            - name: postgres-configmap-volume
              subPath: postgres.conf
              mountPath: /etc/postgres.conf
            - name: postgres-configmap-volume
              subPath: master.conf
              mountPath: /etc/master.conf
            - name: postgres-configmap-volume
              subPath: pg_hba.conf
              mountPath: /etc/pg_hba.conf
            - name: postgres-configmap-volume
              subPath: create-replica-user.sh
              mountPath: /docker-entrypoint-initdb.d/create-replica-user.sh
  volumeClaimTemplates:
    - metadata:
        name: postgres-data-volume
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: fast
        resources:
          requests:
            storage: 1Gi